'#Language "WWB.NET"

'#Uses "Triangle.vb"

Imports System
Imports System.Collections.Generic

Sub Main()
    Begin Dialog UserDialog 390,196,"Triangle Solver",.DlgFunc ' %GRID:10,7,1,1
        GroupBox 10,7,80,105,"Select",.GroupBox1
        OptionGroup .Group1
            OptionButton 20,21,60,14,"SSS"
            OptionButton 20,35,60,14,"SAS"
            OptionButton 20,49,60,14,"SSA"
            OptionButton 20,63,60,14,"AAA"
            OptionButton 20,77,60,14,"AAS"
            OptionButton 20,91,60,14,"ASA"
        Picture 120,14,110,63,"",0,.Picture1
        GroupBox 120,84,120,63,"Sides"
        Text 130,98,10,14,"a"
        Text 130,112,10,14,"b"
        Text 130,126,10,14,"c"
        TextBox 140,98,90,14,.Sa
        TextBox 140,112,90,14,.Sb
        TextBox 140,126,90,14,.Sc
        GroupBox 260,84,120,63,"Angles"
        Text 270,98,10,14,"A"
        Text 270,112,10,14,"B"
        Text 270,126,10,14,"C"
        TextBox 280,98,90,14,.AA
        TextBox 280,112,90,14,.AB
        TextBox 280,126,90,14,.AC
        PushButton 280,28,80,35,"Solve",.Solve
        CancelButton 300,168,80,21
    End Dialog
    Dim dlg As UserDialog
    Dim result = Dialog(dlg)
End Sub

Rem See DialogFunc help topic for more information.
Private Function DlgFunc(DlgItem$, Action%, SuppValue&) As Boolean
    Select Case Action%
    Case 1 ' Dialog box initialization
        SelectTriangle(0)
        DlgText "Sa", "3"
        DlgText "Sb", "4"
        DlgText "Sc", "5"
    Case 2 ' Value changing or button pressed
        Select Case DlgItem
        Case "Group1"
            SelectTriangle(DlgValue("Group1"))
        Case "Solve"
            SolveTriangle
            DlgFunc = True
        End Select
        Rem DlgFunc = True ' Prevent button press from closing the dialog box
    Case 3 ' TextBox or ComboBox text changed
    Case 4 ' Focus changed
    Case 5 ' Idle
        Rem Wait .1 : DlgFunc = True ' Continue getting idle actions
    Case 6 ' Function key
    End Select
End Function

Sub SolveTriangle()
    For Each di As String In {"AA", "AB", "AC", "Sa", "Sb", "Sc"}
        If Not DlgEnable(di) Then DlgText di, "?"
    Next
    Dim Sa As Double = Val(DlgText("Sa"))
    Dim Sb As Double = Val(DlgText("Sb"))
    Dim Sc As Double = Val(DlgText("Sc"))
    Dim AA As Double = Val(DlgText("AA")) * Math.PI/180
    Dim AB As Double = Val(DlgText("AB")) * Math.PI/180
    Dim AC As Double = Val(DlgText("AC")) * Math.PI/180
    Dim t As New Triangle(Sa, Sb, Sc, AA, AB, AC)
    t.Solve()
    If Not t.Solved Then MsgBox "Can't solve triangle"
    DlgText "Sa", CStr(t.Side(0))
    DlgText "Sb", CStr(t.Side(1))
    DlgText "Sc", CStr(t.Side(2))
    DlgText "AA", CStr(t.Angle(0) * 180/Math.PI)
    DlgText "AB", CStr(t.Angle(1) * 180/Math.PI)
    DlgText "AC", CStr(t.Angle(2) * 180/Math.PI)
End Sub

Sub SelectTriangle(index As Integer)
    Dim Category As String = {"SSS", "SAS", "SSA", "AAA", "AAS", "ASA"}(index)
    Dim Enables As String = {"abc", "Abc", "Bbc", "ABC", "ACc", "ABc"}(index)
    DlgSetPicture "Picture1", MacroDir & "\triangle-" & Category & ".bmp", 0
    For Each di As String In {"AA", "AB", "AC", "Sa", "Sb", "Sc"}
        DlgEnable di, False
    Next
    For i As Integer = 0 To Len(Enables) - 1
        If Enables(i) = UCase(Enables(i)) Then
            DlgEnable "A" & Enables(i)
        Else
            DlgEnable "S" & Enables(i)
        End If
    Next
End Sub
